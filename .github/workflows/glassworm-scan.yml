name: GlassWorm Security Scan

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]
  schedule:
    # Run weekly on Monday at 9am UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggers

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run GlassWorm Scanner
        run: npx glassworm-scanner
        env:
          CI: true
          FAIL_ON: high  # Fail on high or critical findings
          MIN_SCORE: 60
        continue-on-error: false
      
      - name: Upload scan report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: glassworm-scan-report
          path: glassworm-scan-report.json
          retention-days: 30
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('glassworm-scan-report.json', 'utf8'));
            const { critical, high, medium, low } = report.summary;
            
            const comment = `## üîç GlassWorm Security Scan Results
            
            | Severity | Count |
            |----------|-------|
            | Critical | ${critical} |
            | High | ${high} |
            | Medium | ${medium} |
            | Low | ${low} |
            
            ‚ùå Scan failed due to high or critical severity findings.
            
            Download the full report from the workflow artifacts for details.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
